name: Build Docker Images (prod)

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'README.md'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v23.1
      - name: Set notification matrix
        id: matrix
        run: |
          echo "::set-output name=matrix::$(.github/bin/find-docker-files.py ${{ steps.changed-files.outputs.all_changed_files }})"

  build:
    environment: main
    needs:
      - setup
    runs-on: ubuntu-latest
    strategy:
      matrix: "${{ fromJson(needs.setup.outputs.matrix) }}"

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker-build
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:${{ matrix.base }}"
          push: true
          file: "Dockerfile"
          tags: |
            cloudnull/${{ matrix.base }}:${{ github.sha }}
            cloudnull/${{ matrix.base }}:${{ matrix.version }}
            cloudnull/${{ matrix.base }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            git_version=${{ matrix.git_version }}
          secrets: |
            GIT_AUTH_TOKEN=${{ github.token }}

      - name: Extract and push binaries
        run: |
          CONTAINER="$(docker create ${{ matrix.base }}:${{ matrix.version }} ${{ matrix.base }})"
          BIN_TMP_DIR="/tmp/${{ matrix.base }}"
          mkdir -p "${BIN_TMP_DIR}"
          for FILE_NAME in ${{ matrix.manifest }}; do
            BASE_FILE_NAME="$(basename ${FILE_NAME})"
            docker cp ${CONTAINER}:${FILE_NAME} ${BIN_TMP_DIR}/${BASE_FILE_NAME}
          done
