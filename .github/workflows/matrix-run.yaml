name: Build images

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'README.md'
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'README.md'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v23.1
      - name: Set notification matrix
        id: matrix
        run: |
          echo "::set-output name=matrix::$(.github/bin/find-docker-files.py ${{ steps.changed-files.outputs.all_changed_files }})"

  build:
    environment: main
    needs:
      - setup
    runs-on: ubuntu-latest
    timeout-minutes: 240
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix: "${{ fromJson(needs.setup.outputs.matrix) }}"
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        if: ${{ github.event_name == 'push' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set target tag default
        id: targettag
        run: |
          TARGET_TAG=${{ matrix.target }}
          echo "::set-output name=value::${TARGET_TAG:-latest}"
      - name: Set reference sha
        id: refsha
        run: |
          REF_SHA=${{ github.event.pull_request.base.sha }}
          echo "::set-output name=value::${REF_SHA:-${{ github.event.before }}}"
      - name: Build and push local
        id: docker_build_local
        uses: docker/build-push-action@v3
        if: ${{ github.event_name != 'push' }}
        with:
          context: "{{defaultContext}}:${{ matrix.base }}"
          push: true
          file: "Dockerfile"
          target: "${{ matrix.target }}"
          tags: |
            localhost:5000/${{ matrix.base }}:latest
          build-args: |
            git_version=${{ matrix.git_version }}
          cache-from: |
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ matrix.base }}:buildcache-${{ steps.targettag.outputs.value }}
          cache-to: |
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ matrix.base }}:buildcache-${{ steps.refsha.outputs.value }},mode=max
          secrets: |
            GIT_AUTH_TOKEN=${{ github.token }}
      - name: Build and push remote
        id: docker_build
        uses: docker/build-push-action@v3
        if: ${{ github.event_name == 'push' }}
        with:
          context: "{{defaultContext}}:${{ matrix.base }}"
          push: true
          file: "Dockerfile"
          target: "${{ matrix.target }}"
          tags: |
            localhost:5000/${{ matrix.base }}:latest
            cloudnull/${{ matrix.base }}:${{ steps.targettag.outputs.value }}
            cloudnull/${{ matrix.base }}:${{ github.sha }}
            cloudnull/${{ matrix.base }}:${{ matrix.version }}
            cloudnull/${{ matrix.base }}:latest
          build-args: |
            git_version=${{ matrix.git_version }}
          cache-from: |
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ matrix.base }}:buildcache-${{ steps.refsha.outputs.value }}
          cache-to: |
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ matrix.base }}:buildcache-${{ steps.targettag.outputs.value }},mode=max
          secrets: |
            GIT_AUTH_TOKEN=${{ github.token }}
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        if: ${{ github.event_name == 'push' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: cloudnull/${{ matrix.base }}
          readme-filepath: ${{ matrix.base }}/README.md
      - name: Extract and push binaries
        run: |
          CONTAINER="$(docker create localhost:5000/${{ matrix.base }}:latest ${{ matrix.base }})"
          BIN_TMP_DIR="/tmp/${{ matrix.base }}"
          mkdir -p "${BIN_TMP_DIR}"
          for FILE_NAME in ${{ matrix.manifest }}; do
            BASE_FILE_NAME="$(basename ${FILE_NAME})"
            docker cp ${CONTAINER}:${FILE_NAME} ${BIN_TMP_DIR}/${BASE_FILE_NAME}
          done
      - name: Upload binary artifacts
        if: ${{ github.event_name != 'push' }}
        uses: actions/upload-artifact@v2
        with:
          name: binary-artifacts-${{ matrix.base }}-${{ steps.targettag.outputs.value }}
          path: /tmp/${{ matrix.base }}*

      # PUSH extracted binaries to CDN
